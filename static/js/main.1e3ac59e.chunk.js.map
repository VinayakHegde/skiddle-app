{"version":3,"sources":["Images/skiddle-logo.png","Components/Search/Search.js","Components/AppHeader/AppHeader.js","Components/Event/Event.js","Components/SearchDetails/SearchDetails.js","Components/Artist/Artist.js","Components/LoadIndicator/LoadIndicator.js","Components/EventDetails/EventDetails.js","Api/Api.js","Components/ArtistDetails/ArtistDetails.js","Components/AppHost/AppHost.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","state","keyword","onKeyUp","_this","debounce","props","callback","evt","this","setState","target","value","react_default","a","createElement","type","className","placeholder","onChange","bind","fn","delay","timeoutHandler","_this2","currentTarget","clearTimeout","setTimeout","call","Component","AppHeader","src","logo","alt","view","Components_Search_Search","search","concat","onClick","set","Event","eventid","details","id","largeimageurl","eventname","dangerouslySetInnerHTML","__html","description","index_es","icon","faCalendarAlt","date","faMapMarked","venue","name","SearchDetails","eventsList","events","map","event","Components_Event_Event","key","Artist","image","LoadIndicator","EventDetails","loading","_this$state","Components_LoadIndicator_LoadIndicator","town","dateStart","dateEnd","faCashRegister","entryprice","faUserAlt","going","length","artists","getArtists","artist","Components_Artist_Artist","artistid","eventId","_this3","axios","get","replace","then","response","data","results","catch","error","console","log","ArtistDetails","imageurl","twitter","indexOf","spotifyartisturl","href","rel","favourite","artistId","AppHost","Components_AppHeader_AppHeader","searchEvents","setStateObj","getView","Components_EventDetails_EventDetails","Components_ArtistDetails_ArtistDetails","Components_SearchDetails_SearchDetails","GetSearchEvents","obj","Boolean","window","location","hostname","match","ReactDOM","render","Components_AppHost_AppHost","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,waC8CzBC,oNA1CXC,MAAQ,CACJC,QAAU,MAGdC,QAAUC,EAAKC,SAAS,WACjBD,EAAKE,MAAMC,UACVH,EAAKE,MAAMC,SAASH,EAAKH,MAAMC,UAEpC,6EAEMM,GACLC,KAAKC,SAAS,CAACR,QAAUM,EAAIG,OAAOC,yCAIpC,OACIC,EAAAC,EAAAC,cAAA,SAAOC,KAAK,SAASC,UAAU,gBAAgBC,YAAY,oBAAoBf,QAAWM,KAAKN,QAASgB,SAAUV,KAAKU,SAASC,KAAKX,MAAOG,MAAOH,KAAKR,MAAMC,sDAKlKO,KAAKC,SAAS,CAACR,QAAUO,KAAKH,MAAMM,yCAG/BS,EAAIC,GAAM,IACXC,EADWC,EAAAf,KAGf,OAAO,SAACD,GAEJgB,EAAKd,SAAS,CAACR,QAAUM,EAAIiB,cAAcb,QAE3Cc,aAAaH,GAEbA,EAAiBI,WAAW,WACxBN,EAAGO,KAAKJ,GACRD,EAAiB,MAElBD,WAtCMO,+BC2BNC,0LAvBF,IAAA1B,EAAAK,KACL,OACII,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAKgB,IAAKC,IAAMf,UAAU,WAAWgB,IAAI,YACzCpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBAENR,KAAKH,MAAM4B,MACLrB,EAAAC,EAAAC,cAACoB,EAAD,CAAQ5B,SAAUE,KAAKH,MAAM8B,OAAQxB,MAAOH,KAAKH,MAAMJ,UAGzC,kBAApBO,KAAKH,MAAM4B,MACLrB,EAAAC,EAAAC,cAAA,UAAQE,UAAS,eAAAoB,OAAiB5B,KAAKH,MAAM4B,MAAQI,QAAS,kBAAKlC,EAAKE,MAAMiC,IAAI,CAACL,KAAO,mBAA1F,oBAGc,iBAApBzB,KAAKH,MAAM4B,MAA+C,kBAApBzB,KAAKH,MAAM4B,OAC3CrB,EAAAC,EAAAC,cAAA,UAAQE,UAAS,eAAAoB,OAAiB5B,KAAKH,MAAM4B,MAAQI,QAAS,kBAAKlC,EAAKE,MAAMiC,IAAI,CAACL,KAAO,SAA1F,4BAhBPL,4BC2BTW,2LA1BJ/B,KAAKH,MAAMC,UACVE,KAAKH,MAAMC,SAAS,CAChBkC,QAAUhC,KAAKH,MAAMoC,QAAQC,GAC7BT,KAAK,kDAIR,IAAA9B,EAAAK,KACCiC,EAAUjC,KAAKH,MAAMoC,QAC3B,OACI7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcc,IAAKW,EAAQE,cAAeX,IAAKS,EAAQG,YACtEhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BAA2ByB,EAAQG,WAClDhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCAAiC6B,wBAAyB,CAAEC,OAAQL,EAAQM,eAC3FnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMC,IAAelC,UAAU,SAASyB,EAAQU,MAErEvC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMG,IAAapC,UAAU,SAASyB,EAAQY,MAAMC,MAEzE1C,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAeqB,QAAS,kBAAMlC,EAAKkC,YAArD,wBAtBIT,cCaL2B,0LAZF,IAAApD,EAAAK,KACCgD,EAAahD,KAAKH,MAAMoD,OAAOC,IAAI,SAAAC,GACrC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAOnB,QAASkB,EAAOE,IAAKF,EAAMjB,GAAIpC,SAAUH,EAAKE,MAAMC,aAEtE,OACIM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACVwC,UAPW5B,cCkBbkC,0NAnBX9D,MAAQ,CAAEyC,QAAU,8EACX,IAAAlB,EAAAf,KACCiC,EAAUjC,KAAKH,MAAMoC,QAE3B,OACI7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAAiBqB,QAAS,kBAAMd,EAAKc,YAChDzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAac,IAAKW,EAAQsB,MAAO/B,IAAKS,EAAQa,OAC7D1C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAeyB,EAAQa,yCAM3C9C,KAAKH,MAAMC,UACVE,KAAKH,MAAMC,kBAfFsB,cCMNoC,0LAJP,OAASpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAFJY,cCsGbqC,6MA/FXjE,MAAQ,CACJyC,QAAU,KACVyB,SAAU,2EAEL,IAAAC,EACsB3D,KAAKR,MAAzByC,EADF0B,EACE1B,QAEP,OAHK0B,EACWD,QAGLtD,EAAAC,EAAAC,cAACsD,EAAD,MAEP3B,EAIA7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAcyB,EAAQG,WACrChC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAec,IAAKW,EAAQE,cAAeX,IAAKS,EAAQG,YAEvEhC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCAAkC6B,wBAAyB,CAAEC,OAAQL,EAAQM,gBAGhGnC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMG,IAAapC,UAAU,SAC9CJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,oBAAoByB,EAAQY,MAAMC,KAAlD,OAA4Db,EAAQY,MAAMgB,OAG9EzD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMC,IAAelC,UAAU,SAChDJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,mBAAmByB,EAAQ6B,UAA3C,OAA0D7B,EAAQ8B,UAEtE3D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMuB,IAAgBxD,UAAU,SADrD,iBAEmByB,EAAQgC,YAE3B7D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACXJ,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAiBC,KAAMyB,IAAY1D,UAAU,SAASyB,EAAQkC,MAAMC,OADxE,YAKNnC,EAAQoC,QAAQD,OAAS,GAAKhE,EAAAC,EAAAC,cAAA,mCAE/BN,KAAKsE,WAAWrC,EAAQoC,WAlC1BjE,EAAAC,EAAAC,cAAA,yEAwCJ+D,GAAQ,IAAAtD,EAAAf,KACf,OAAIqE,GAAWA,EAAQD,OAEfhE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBAEP6D,EAAQnB,IAAI,SAAAqB,GACR,OACInE,EAAAC,EAAAC,cAACkE,EAAD,CAAQvC,QAASsC,EAAQzE,SAAU,WAAOiB,EAAKlB,MAAMC,SAAS,CAC1D2E,SAAWF,EAAOE,SAClBhD,KAAK,mBACJ4B,IAAKkB,EAAOE,cAQjC,iDAEO,ICvEEC,EDuEFC,EAAA3E,KACfA,KAAKC,SAAS,CACVgC,QAAU,KACVyB,SAAQ,KC1EKgB,ED6ED1E,KAAKH,MAAMmC,QC5ExB4C,IAAMC,IARF,2FAQeC,QAAQ,WAAYJ,KD6EzCK,KAAK,SAAAC,GACFL,EAAK1E,SAAS,CACVgC,QAAU+C,EAASC,KAAKC,QACxBxB,SAAQ,MAGfyB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GAEZT,EAAK1E,SAAS,CACVgC,QAAU,KACVyB,SAAQ,aA1FGtC,aEyDZmE,oNA3DX/F,MAAQ,CACJyC,QAAU,KACVyB,SAAU,2EAGL,IAAAC,EACsB3D,KAAKR,MAAzByC,EADF0B,EACE1B,QAEP,GAHK0B,EACWD,QAGZ,OAAOtD,EAAAC,EAAAC,cAACsD,EAAD,MAGX,IAAI3B,EACA,OAAQ7B,EAAAC,EAAAC,cAAA,+BAGZ,IAAMiE,EAAS,CACXhB,MAAQtB,EAAQuD,SAChB1C,KAAOb,EAAQa,MAGb2C,EAAUxD,EAAQwD,QAAQrB,OAAmD,GAA1CnC,EAAQwD,QAAQC,QAAQ,eAAsBzD,EAAQwD,QAAU,uBAAuB7D,OAAOK,EAAQwD,SAAW,KAE1J,OACIrF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAACkE,EAAD,CAAQvC,QAASsC,IACftC,EAAQ0D,kBAAoBvF,EAAAC,EAAAC,cAAA,KAAGsF,KAAM3D,EAAQ0D,iBAAkBzF,OAAO,SAAS2F,IAAI,uBAAvD,WAC5BJ,GAAWrF,EAAAC,EAAAC,cAAA,KAAGsF,KAAMH,EAASvF,OAAO,SAAS2F,IAAI,uBAAtC,WACbzF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cAAf,eAAyCyB,EAAQ6D,YAErD1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsByB,EAAQM,0DAKtC,ID7BGwD,EC6BHhF,EAAAf,KACfA,KAAKC,SAAS,CACVgC,QAAQ,KACRyB,SAAQ,KDhCMqC,ECmCD/F,KAAKH,MAAM4E,SDlCzBG,IAAMC,IAXD,2FAWeC,QAAQ,YAAaiB,KCmC3ChB,KAAK,SAAAC,GACFjE,EAAKd,SAAS,CACVgC,QAAU+C,EAASC,KAAKC,QACxBxB,SAAQ,MAGfyB,MAAM,SAACC,GACJC,QAAQC,IAAIF,GACZrE,EAAKd,SAAS,CACVgC,QAAU,KACVyB,SAAQ,aAtDItC,cCmEb4E,oNA5DXxG,MAAQ,CACJC,QAAU,GACVwD,OAAS,GACTjB,QAAQ,KACRyC,SAAU,KACVhD,KAAO,KACPiC,SAAU,2EAIV,OACItD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAC2F,EAAD,CAAWxE,KAAMzB,KAAKR,MAAMiC,KAAMhC,QAASO,KAAKR,MAAMC,QAASkC,OAAQ3B,KAAKkG,aAAavF,KAAKX,MAAO8B,IAAK9B,KAAKmG,YAAYxF,KAAKX,QAC9HA,KAAKoG,6CAMf,OAAGpG,KAAKR,MAAMkE,QACHtD,EAAAC,EAAAC,cAACsD,EAAD,MAGY,iBAApB5D,KAAKR,MAAMiC,KACHrB,EAAAC,EAAAC,cAAC+F,EAAD,CAAcrE,QAAShC,KAAKR,MAAMwC,QAASlC,SAAUE,KAAKmG,YAAYxF,KAAKX,QACxD,kBAApBA,KAAKR,MAAMiC,KACVrB,EAAAC,EAAAC,cAACgG,EAAD,CAAe7B,SAAUzE,KAAKR,MAAMiF,WAExCrE,EAAAC,EAAAC,cAACiG,EAAD,CAAetD,OAAQjD,KAAKR,MAAMyD,OAAQnD,SAAUE,KAAKmG,YAAYxF,KAAKX,oDAKjFA,KAAKkG,aAAalG,KAAKR,MAAMC,8CAGpBA,GAAQ,IAAAsB,EAAAf,KACjBA,KAAKmG,YAAY,CACb1G,QAAUA,EACVwD,OAAS,GACTxB,KAAO,KACPiC,SAAU,IFhDE,SAACjE,GACrB,OAAOmF,IAAMC,IALC,0GAKaC,QAAQ,WAAYrF,IEiD3C+G,CAAgB/G,GACXsF,KAAM,SAAAC,GACHjE,EAAKoF,YAAY,CACbzC,SAAU,EACVT,OAAS+B,EAASC,KAAKC,YAG9BC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,yCAIZqB,GACRzG,KAAKC,SAASwG,UAzDArF,cCAFsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,MAAaC,SAASC,eAAe,SD2H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvC,KAAK,SAAAwC,GACjCA,EAAaC","file":"static/js/main.1e3ac59e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/skiddle-logo.22dea327.png\";","import React, { Component } from 'react';\r\nimport './Search.css';\r\n\r\nclass Search extends Component {\r\n    state = { \r\n        keyword : ''\r\n    };\r\n\r\n    onKeyUp = this.debounce(()=>{\r\n        if(this.props.callback){\r\n            this.props.callback(this.state.keyword);\r\n        }\r\n    }, 1000);\r\n\r\n    onChange(evt){\r\n        this.setState({keyword : evt.target.value});\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <input type=\"search\" className=\"search-events\" placeholder=\"Search for events\" onKeyUp = {this.onKeyUp} onChange={this.onChange.bind(this)} value={this.state.keyword}/>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({keyword : this.props.value})\r\n    }\r\n\r\n    debounce(fn, delay){\r\n        let timeoutHandler;\r\n\r\n        return (evt) => {\r\n\r\n            this.setState({keyword : evt.currentTarget.value});\r\n\r\n            clearTimeout(timeoutHandler);\r\n\r\n            timeoutHandler = setTimeout(() => {\r\n                fn.call(this);\r\n                timeoutHandler = null;\r\n\r\n            }, delay);\r\n        }\r\n    }\r\n}\r\n \r\nexport default Search;","import React, { Component } from 'react';\r\n\r\nimport Search from '../Search/Search';\r\nimport logo from '../../Images/skiddle-logo.png'; \r\nimport './AppHeader.css';\r\n\r\nclass AppHeader extends Component {\r\n    render() { \r\n        return ( \r\n            <header className=\"app-header\">\r\n                <img src={logo} className=\"app-logo\" alt=\"skiddle\" />\r\n                <div className=\"input-action-wrapper\">\r\n                    { \r\n                        !this.props.view \r\n                            && <Search callback={this.props.search} value={this.props.keyword}></Search> \r\n                    }\r\n                    { \r\n                        (this.props.view === 'artistdetails') \r\n                            && <button className={`back-button ${this.props.view}`} onClick={()=> this.props.set({view : 'eventdetails'})}>Back to details</button>\r\n                    }\r\n                    { \r\n                        (this.props.view === 'eventdetails' || this.props.view === 'artistdetails') \r\n                            && <button className={`back-button ${this.props.view}`} onClick={()=> this.props.set({view : null})}>Back to results</button>\r\n                    }\r\n                </div>\r\n            </header>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AppHeader;","import React, { Component } from 'react'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faMapMarked } from '@fortawesome/free-solid-svg-icons';\r\nimport './Event.css';  \r\n\r\nclass Event extends Component {\r\n    onClick(){\r\n        if(this.props.callback){\r\n            this.props.callback({\r\n                eventid : this.props.details.id,\r\n                view:'eventdetails'\r\n            });\r\n        }\r\n    }\r\n    render() { \r\n        const details = this.props.details;\r\n        return (\r\n            <div className=\"card\">\r\n                <img className=\"card-poster\" src={details.largeimageurl} alt={details.eventname}/>\r\n                <div className=\"card-title card-segment\">{details.eventname}</div>\r\n                <div className=\"card-description card-segment\"  dangerouslySetInnerHTML={{ __html: details.description }}></div>\r\n                <div className=\"card-date card-segment\">\r\n                    <FontAwesomeIcon icon={faCalendarAlt} className=\"icon\"/>{details.date}\r\n                </div>\r\n                <div className=\"card-venue card-segment\">\r\n                    <FontAwesomeIcon icon={faMapMarked} className=\"icon\"/>{details.venue.name}\r\n                </div>\r\n                <button className=\"card-details\" onClick={() => this.onClick()}>View Details</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Event;","import React, { Component } from 'react';\r\n\r\nimport Event from '../Event/Event';\r\nimport './SearchDetails.css';\r\n\r\nclass SearchDetails extends Component {\r\n    render() { \r\n        const eventsList = this.props.events.map(event => {\r\n            return <Event details={event} key={event.id} callback={this.props.callback}></Event>;\r\n        });\r\n        return ( \r\n            <div className=\"events-collection\">\r\n                {eventsList}\r\n            </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default SearchDetails;","import React, { Component } from 'react';\r\nimport './Artist.css';\r\n\r\nclass Artist extends Component {\r\n    state = { details : null };\r\n    render() { \r\n        const details = this.props.details;\r\n\r\n        return ( \r\n            <div className=\"artist-wrapper\" onClick={() => this.onClick()}>\r\n                <img className=\"artist-pic\" src={details.image} alt={details.name}/>\r\n                <div className=\"artist-name\">{details.name}</div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    onClick(){\r\n        if(this.props.callback){\r\n            this.props.callback();\r\n        }\r\n    }\r\n}\r\n \r\nexport default Artist;","import React, { Component } from 'react';\r\nimport './LoadIndicator.css';\r\n\r\nclass LoadIndicator extends Component {\r\n    render() { \r\n        return ( <div className=\"loader\"></div> );\r\n    }\r\n}\r\n \r\nexport default LoadIndicator;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faMapMarked, faUserAlt, faCashRegister } from '@fortawesome/free-solid-svg-icons';\r\nimport { GetEventDetails} from '../../Api/Api';\r\nimport './EventDetails.css';\r\nimport Artist from '../Artist/Artist';\r\nimport LoadIndicator from '../LoadIndicator/LoadIndicator';\r\n\r\n\r\nclass EventDetails extends Component {\r\n    state = {\r\n        details : null,\r\n        loading : true\r\n    }\r\n    render() { \r\n        const {details, loading} = this.state;\r\n\r\n        if(loading){\r\n            return <LoadIndicator></LoadIndicator>\r\n        }\r\n        if(!details) {\r\n            return <div>Event details not found</div>\r\n        }\r\n        return ( \r\n            <div className=\"event-details-wrapper\">\r\n                <div className=\"event-details-inner-wrapper\">\r\n                    <div className=\"event-header\">\r\n                        <div className=\"event-name\">{details.eventname}</div>\r\n                        <img className=\"event-poster\" src={details.largeimageurl} alt={details.eventname}/>\r\n\r\n                        <div className=\"event-description event-segment\" dangerouslySetInnerHTML={{ __html: details.description }} >\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"event-banner\">\r\n                        <div className=\"event-details\">\r\n                            <div className=\"event-venue event-segment\">\r\n                                <FontAwesomeIcon icon={faMapMarked} className=\"icon\"/>\r\n                                <span className=\"event-venue-name\">{details.venue.name} in {details.venue.town}</span>\r\n                            </div>\r\n                            \r\n                            <div className=\"event-date event-segment\">\r\n                                <FontAwesomeIcon icon={faCalendarAlt} className=\"icon\"/>\r\n                                <span className=\"event-date-name\">{details.dateStart} to {details.dateEnd}</span>\r\n                            </div>\r\n                            <div className=\"event-price event-segment\">\r\n                                <FontAwesomeIcon icon={faCashRegister} className=\"icon\"/>\r\n                                Entry Price : {details.entryprice}\r\n                            </div>\r\n                            <div className=\"event-goers event-segment\">\r\n                                <FontAwesomeIcon icon={faUserAlt}  className=\"icon\"/>{details.going.length} Going\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { details.artists.length > 0 && <h2>who's on the line-up?</h2>}\r\n\r\n                    {this.getArtists(details.artists)}\r\n                </div>\r\n            </div> \r\n        );\r\n    }\r\n\r\n    getArtists(artists){\r\n        if( artists && artists.length){\r\n            return (\r\n                <div className=\"event-artists\">\r\n                    {\r\n                        artists.map(artist => {\r\n                            return (\r\n                                <Artist details={artist} callback={() => {this.props.callback({\r\n                                    artistid : artist.artistid,\r\n                                    view:'artistdetails'\r\n                                })}} key={artist.artistid}></Artist>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return  null;\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            details : null,\r\n            loading:true\r\n        });\r\n        \r\n        GetEventDetails(this.props.eventid)\r\n        .then(response => {\r\n            this.setState({\r\n                details : response.data.results,\r\n                loading:false\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            \r\n            this.setState({\r\n                details : null,\r\n                loading:false\r\n            });\r\n        });\r\n    }\r\n}\r\n \r\nexport default EventDetails;","import axios from 'axios';\r\n\r\nconst searchApi = \"https://www.skiddle.com/api/v1/events/search/?api_key=008f1e6099ecc48e990e3776784d447b&keyword=KEY_WORD\",\r\n    eventApi = \"https://www.skiddle.com/api/v1/events/EVENT_ID/?api_key=008f1e6099ecc48e990e3776784d447b\",\r\n    artistApi = \"https://www.skiddle.com/api/v1/artist/ARTIST_ID?api_key=008f1e6099ecc48e990e3776784d447b\";\r\n\r\nconst GetSearchEvents = (keyword) => {\r\n    return axios.get(searchApi.replace('KEY_WORD', keyword));\r\n};\r\n\r\nconst GetEventDetails = (eventId) => {\r\n    return axios.get(eventApi.replace('EVENT_ID', eventId));\r\n};\r\n\r\nconst GetArtistDetails = (artistId) => {\r\n    return axios.get(artistApi.replace('ARTIST_ID', artistId));\r\n};\r\n\r\nexport {GetSearchEvents, GetEventDetails, GetArtistDetails};","import React, { Component } from 'react';\r\nimport { GetArtistDetails} from '../../Api/Api';\r\nimport Artist from '../Artist/Artist';\r\nimport './ArtistDetails.css';\r\nimport LoadIndicator from '../LoadIndicator/LoadIndicator';\r\n\r\nclass ArtistDetails extends Component {\r\n    state = { \r\n        details : null, \r\n        loading : true \r\n    }\r\n\r\n    render() { \r\n        const {details, loading} = this.state;\r\n        \r\n        if(loading){\r\n            return <LoadIndicator></LoadIndicator>\r\n        }\r\n\r\n        if(!details){\r\n            return (<div>No details found</div>);\r\n        }\r\n        \r\n        const artist = {\r\n            image : details.imageurl,\r\n            name : details.name\r\n        };\r\n\r\n        const twitter = details.twitter.length ? details.twitter.indexOf('twitter.com') == 0 ? details.twitter : 'https://twitter.com/'.concat(details.twitter) : null; \r\n        \r\n        return ( \r\n            <div className=\"artist-details-wrapper\">\r\n                <div className=\"artist-profile\">\r\n                    <Artist details={artist}></Artist>\r\n                    { details.spotifyartisturl && <a href={details.spotifyartisturl} target=\"_blank\" rel=\"noopener noreferrer\">Spotify</a> }\r\n                    { twitter && <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a> }\r\n                    <div className=\"artist-fav\">Favourite : {details.favourite}</div>\r\n                </div>\r\n                <div className=\"artist-description\">{details.description}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            details:null, \r\n            loading:true\r\n        });\r\n\r\n        GetArtistDetails(this.props.artistid)\r\n        .then(response => {\r\n            this.setState({\r\n                details : response.data.results, \r\n                loading:false\r\n            });\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n            this.setState({\r\n                details : null, \r\n                loading:false\r\n            });\r\n        })\r\n    }\r\n}\r\n \r\nexport default ArtistDetails;","import React, { Component } from 'react';\r\n\r\nimport {GetSearchEvents} from '../../Api/Api';\r\n\r\nimport AppHeader from '../AppHeader/AppHeader';\r\nimport SearchDetails from '../SearchDetails/SearchDetails';\r\nimport EventDetails from '../EventDetails/EventDetails';\r\nimport ArtistDetails from '../ArtistDetails/ArtistDetails';\r\nimport LoadIndicator from '../LoadIndicator/LoadIndicator';\r\n\r\nimport './AppHost.css';\r\n\r\nclass AppHost extends Component {\r\n    state = { \r\n        keyword : '',\r\n        events : [],\r\n        eventid:null,\r\n        artistid: null,\r\n        view : null,\r\n        loading : true \r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div className=\"app-host\">\r\n                <AppHeader view={this.state.view} keyword={this.state.keyword} search={this.searchEvents.bind(this)} set={this.setStateObj.bind(this)} ></AppHeader>\r\n                { this.getView()}\r\n            </div> \r\n        );\r\n    }\r\n\r\n    getView(){\r\n        if(this.state.loading){\r\n            return <LoadIndicator></LoadIndicator>\r\n        }        \r\n\r\n        if(this.state.view === 'eventdetails'){\r\n            return <EventDetails eventid={this.state.eventid} callback={this.setStateObj.bind(this)}></EventDetails>\r\n        } else if(this.state.view === 'artistdetails'){\r\n            return <ArtistDetails artistid={this.state.artistid}></ArtistDetails>\r\n        }  \r\n        return <SearchDetails events={this.state.events} callback={this.setStateObj.bind(this)}></SearchDetails>\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.searchEvents(this.state.keyword);\r\n    }\r\n\r\n    searchEvents(keyword){\r\n        this.setStateObj({\r\n            keyword : keyword,\r\n            events : [],\r\n            view : null,\r\n            loading : true\r\n        });\r\n        GetSearchEvents(keyword)\r\n            .then( response => {\r\n                this.setStateObj({\r\n                    loading : false,\r\n                    events : response.data.results\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    setStateObj(obj){\r\n        this.setState(obj);\r\n    }\r\n}\r\n \r\nexport default AppHost;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppHost from './Components/AppHost/AppHost';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppHost />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}